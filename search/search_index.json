{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Pokesage Docs!","text":"<p>This site contains the project documentation for the <code>pokesage</code> project, whose goal is to make developing and training pokemon playing AI fast, easy, and powerful.</p> <p>The project is built on top of its partner project, <code>poketypes</code>. <code>poketypes</code> is what provides consistency for our category labeling when serializing the battle state, which allows us to do cool things: * Train one model for all generations * Offload tedious label encoding * Ensuring model cross-compatibility * So much more</p> <p>Just like <code>poketypes</code>, <code>pokesage</code> is also built with full type-hinting support, which means that whether you are building a bot that follows traditional branching logic, or a fully machine learning based approach, you don't have to worry about the data pipeline at all.</p>"},{"location":"#basic-architecture","title":"Basic Architecture","text":"<p>This package contains fully-typehinted, modern classes for the following purposes:</p> <ul> <li><code>connectors</code>: Handlers for the game-communication layer</li> <li><code>processors</code>: Handlers for turning game-messages into the Battle State</li> <li><code>sages</code>: Handlers for turning game-choices into game-actions (The actual AI part)</li> <li><code>battle</code>: pydantic Base Models for storing game state and possible game-choices.</li> </ul> <p>Depending on how you want to use the library, you might need to subclass one or more of the classes referenced in the sections above. For more details about how each component works together, check out the project flow page!</p> <p>You can get started on this process by following the installation instructions here, or by jumping into learning-by-doing and following some of the guides in the guides section.</p>"},{"location":"about/license/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2023 Trevor Wieland</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"}]}